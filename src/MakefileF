##propagation makefile

.SUFFIXES: .cc .class .java .cxx .C .cpp .o .c .l .y .f
 
 
VPATH =  
 
YACC = bison
LEX = flex
JAVA = gcj
CC = gcc
CPP = g++
FORT = g77
YACC_FLAGS =
LEX_FLAGS =
JAVA_FLAGS =
CC_FLAGS =
CPP_FLAGS =   -O2 -Wall
YACC_INCLUDES =
LEX_INCLUDES =
JAVA_INCLUDES =
CC_INCLUDES =
CPP_INCLUDES = -I./3rd-party/include
YACC_DEFINES =
LEX_DEFINES =
JAVA_DEFINES =
CC_DEFINES =
CPP_DEFINES = -DAA_FORTRAN
propagation.sp_LIBS = -lc -lxerces-c -lgslcblas -lgsl
Xmax_LIBS = -lc -lgslcblas -lgsl
LINKER = g77
LINKER_FLAGS = -L./3rd-party/lib -L/lib
LINKER_ENTRY =

propagation.sp_OBJECTS = Kneiske0309IROSpectrum.o Deflection.o AA.o crn6.o Weak.o TPP.o Synchrotron.o PP.o PhotoDisintegration.o NeutronDecay.o MPP.o Jacobian.o ICS.o GZK.o ConcentrationsGslAdapter.o Coupling.o TableBackground.o Kneiske1001IROSpectrum.o Log.o ScanInfoWritter.o Resource.o base64.o VersionInfo.o Dpp.o Axion.o TableCrossSection.o ClusterSourceEngine.o ClusterIROSpectrum.o winmain.o Stecker2005IROSpectrum.o Stecker98IROSpectrum.o Nucleus.o PowerLowInjectionSpectra.o InjectionSpectraFactory.o ParticleFactory.o FragmentationBasedInjSpectra.o Function.o Tests.o Distribution.o FarRandomSourceEngine.o RandomSourceEngine.o PropagEngine.o Addfunc.o Background.o Concentr.o const.o Crosssec.o DataReader.o main.o FilePreprocessor.o FilePtr.o Fragmentation.o InjectionSpectra.o IROSpectrum.o LEPData.o TableFunc.o MassiveNeutrino.o MuPP.o Particle.o Ppp.o Prodspec.o PropagCoef.o Ranges.o SecondaryDifSigma.o Settings.o Sigma.o Switches.o TableReader.o TestBackground.o TimeZ.o UserInjSpectra.o Vector.o Units.o TestB.o QuasiParticle.o FuncTransformation.o Init.o KneiskeIROSpectrum.o PrimackIROSpectrum.o XMLUtil.o XMLSwitchFileReader.o
ResourceCompile_OBJECTS = base64.o ResourceCompile.o

Xmax_OBJECTS = Xmax.o Log.o Addfunc.o FilePreprocessor.o FilePtr.o TableFunc.o TableReader.o Vector.o base64.o Resource.o VersionInfo.o

ResourceCompile_OBJECTS = base64.o ResourceCompile.o
 
all: propagation.ja
VersionInfo: ResourceCompile
	date +"  built on %A %B %d %Y %t%T\"" > __buildTime
	echo -n "#define RELEASE_INFO \"rev. " > __start
	# obtaining svn revision... if command fails try
	# make -f speedXML old
	svnversion -n . > __svnInfo
	./ResourceCompile EncodedSvnVer __svnInfo > _autogeneratedSvnInfo.c
	cat __start __svnInfo __buildTime > _autogeneratedVersionInfo.h
	rm __buildTime __start __svnInfo
	echo "bla bla" > VersionInfo.o
	rm VersionInfo.o
	svn diff > _svn.diff
	./ResourceCompile EncodedSvnDif _svn.diff > _autogeneratedDif.c
	rm _svn.diff

NoVersionInfo:
	date +"  built on %A %B %d %Y %t%T\"" > __buildTime
	echo -n "#define RELEASE_INFO \"rev. " > __start
	echo -n "0" > __svnInfo
	./ResourceCompile EncodedSvnVer __svnInfo > _autogeneratedSvnInfo.c
	cat __start __svnInfo __buildTime > _autogeneratedVersionInfo.h
	rm __buildTime __start __svnInfo
	echo "bla bla" > VersionInfo.o
	rm VersionInfo.o
	echo "StringResource EncodedSvnDif;" > _autogeneratedDif.c
DeleteVersionInfo:
	rm -f _autogeneratedVersionInfo.h _autogeneratedDif.c _autogeneratedSvnInfo.c

ResourceCompile: $(ResourceCompile_OBJECTS)
	g++ -o ResourceCompile $(LINKER_ENTRY) $(LINKER_FLAGS) $(ResourceCompile_OBJECTS) -lc

Xmax: VersionInfo $(Xmax_OBJECTS) DeleteVersionInfo
	$(LINKER) -o ../bin/Xmax $(LINKER_ENTRY) $(LINKER_FLAGS) $(Xmax_OBJECTS) $(Xmax_LIBS)

oldXmax: NoVersionInfo $(Xmax_OBJECTS) DeleteVersionInfo
	$(LINKER) -o ../bin/Xmax $(LINKER_ENTRY) $(LINKER_FLAGS) $(Xmax_OBJECTS) $(Xmax_LIBS)

propagation.ja: VersionInfo $(propagation.sp_OBJECTS) DeleteVersionInfo
	$(LINKER) -o ../bin/propagation.ja.new $(LINKER_ENTRY) $(LINKER_FLAGS) $(propagation.sp_OBJECTS) $(propagation.sp_LIBS)

old: NoVersionInfo $(propagation.sp_OBJECTS) DeleteVersionInfo
	$(LINKER) -o ../bin/propagation.sp.XML.new $(LINKER_ENTRY) $(LINKER_FLAGS) $(propagation.sp_OBJECTS) $(propagation.sp_LIBS)

.y.c:
	$(YACC) $< $(YACC_FLAGS) $(YACC_DEFINES) $(YACC_INCLUDES)


.l.c:
	$(LEX) $< $(LEX_FLAGS) $(LEX_DEFINES) $(LEX_INCLUDES)


.java.o:
	$(JAVA) -c $< $(JAVA_FLAGS) $(JAVA_DEFINES) $(JAVA_INCLUDES)
.class:
	$(JAVA) -c $< $(JAVA_FLAGS) $(JAVA_DEFINES) $(JAVA_INCLUDES)


.c.o:
	$(CC) -c $< $(CC_FLAGS) $(CC_DEFINES) $(CC_INCLUDES)


.cpp.o:
	$(CPP) -c $< $(CPP_FLAGS) $(CPP_DEFINES) $(CPP_INCLUDES)
.C.o:
	$(CPP) -c $< $(CPP_FLAGS) $(CPP_DEFINES) $(CPP_INCLUDES)
.cc.o:
	$(CPP) -c $< $(CPP_FLAGS) $(CPP_DEFINES) $(CPP_INCLUDES)
.cxx.o:
	$(CPP) -c $< $(CPP_FLAGS) $(CPP_DEFINES) $(CPP_INCLUDES)

.f.o:
	$(FORT) -fno-second-underscore -ff2c -c $<

clean: DeleteVersionInfo
	rm -f *.o
